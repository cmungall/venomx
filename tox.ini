# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# To use a PEP 517 build-backend you are required to configure tox to use an isolated_build:
# https://tox.readthedocs.io/en/latest/example/package.html
isolated_build = True
skipsdist = True

envlist =
    # always keep coverage-clean first
    coverage-clean
    lint-fix
    lint
    codespell-write
    docstr-coverage
    py

[testenv]
allowlist_externals =
    poetry
commands =
    poetry run pytest {posargs}
description = Run unit tests with pytest. This is a special environment that does not get a name, and
              can be referenced with "py".

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

# This is used during development
[testenv:lint-fix]
deps =
    black
    ruff
skip_install = true
commands =
    black src/ tests/
    ruff --fix src/ tests/
description = Run linters.

# This is used for QC checks.
[testenv:lint]
deps =
    black
    ruff
skip_install = true
commands =
    black --check --diff src/ tests/
    ruff check src/ tests/
description = Run linters.

[testenv:doclint]
deps =
    rstfmt
skip_install = true
commands =
    rstfmt docs/source/
description = Run documentation linters.

[testenv:codespell]
description = Run spell checker.
skip_install = true
deps =
    codespell
    tomli  # required for getting config from pyproject.toml
commands = codespell src/ tests/

[testenv:codespell-write]
description = Run spell checker and write corrections.
skip_install = true
deps =
    codespell
    tomli
commands = codespell src/ tests/ --write-changes

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/ tests/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

[flake8]
ignore =
    E203
    W503
    C901 # needs code change so ignoring for now.
    E731 # needs code change so ignoring for now.
    S101 # asserts are fine
    S106 # flags false positives with test_table_filler
    N801 # mixed case is bad but there's a lot of auto-generated code
    N815 # same ^
    S404 # Consider possible security implications associated with the subprocess module.
    S108 # Probable insecure usage of temp file/directory.
    S307 # Use of possibly insecure function - consider using safer ast.literal_eval.
    S603 # subprocess call - check for execution of untrusted input.
    S607 # Starting a process with a partial executable path ["open" in both cases]
    S608 # Possible SQL injection vector through string-based query construction.
    B024 # StreamingWriter is an abstract base class, but it has no abstract methods. 
         # Remember to use @abstractmethod, @abstractclassmethod and/or @abstractproperty decorators.
    B027 # empty method in an abstract base class, but has no abstract decorator. Consider adding @abstractmethod
    N803 # math-oriented classes can ignore this (e.g. hypergeometric.py)
    N806 # math-oriented classes can ignore this (e.g. hypergeometric.py)
    B019
    S113 # new check - deal with this later
